import tensorflow as tf
from tensorflow import keras
import tensorflow.lite as tflite
import matplotlib.pyplot as plt
import numpy as np

model = keras.models.load_model('dino_dragon_10_0.899.h5')

converter = tf.lite.TFLiteConverter.from_keras_model(model)
tflite_model = converter.convert()

with open('dino-dragon-model.tflite', 'wb') as f_out:
    f_out.write(tflite_model)

interpreter = tflite.Interpreter(model_path='dino-dragon-model.tflite')
interpreter.allocate_tensors()

input_index = interpreter.get_input_details()[0]['index']
output_index = interpreter.get_output_details()[0]['index']
print('2. Output index: ', output_index)

from io import BytesIO
from urllib import request

from PIL import Image

def download_image(url):
    with request.urlopen(url) as resp:
        buffer = resp.read()
    stream = BytesIO(buffer)
    img = Image.open(stream)
    return img

def prepare_image(img, target_size):
    if img.mode != 'RGB':
        img = img.convert('RGB')
    img = img.resize(target_size, Image.NEAREST)
    return img

img = download_image('https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/Smaug_par_David_Demaret.jpg/1280px-Smaug_par_David_Demaret.jpg')
img = prepare_image(img, target_size=(150, 150))

def prepare_input(x):
    return x / 255.0

x = np.array(img, dtype='float32')
X = np.array([x])
X = prepare_input(X)
print('3. First pixel after preprocessing: ', X[0,0,0,0])

interpreter.set_tensor(input_index, X)
interpreter.invoke()

preds = interpreter.get_tensor(output_index)
print('4. Model prediction: ', preds)

Output:
2. Output index:  13
3. First pixel after preprocessing:  0.5529412
4. Model prediction:  [[0.82448506]]
