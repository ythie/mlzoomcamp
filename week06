import re
import numpy as np
import pandas as pd
import seaborn as sns
import xgboost as xgb
import matplotlib.pyplot as plt
from tqdm.auto import tqdm
from sklearn.tree import DecisionTreeRegressor
from sklearn.tree import export_text
from sklearn.feature_extraction import DictVectorizer
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error

# Main
cols = ["longitude", "latitude", "housing_median_age", "total_rooms", "total_bedrooms", "population", "households", 
        "median_income", "median_house_value", "ocean_proximity"]
df = pd.read_csv('housing.csv', sep=',', usecols=cols)
df.total_bedrooms = df.total_bedrooms.fillna(0)
print(df.head().T, '\n')

# Data Preparation
df_ftrain, df_test = train_test_split(df, test_size=0.2, random_state=1)
df_train, df_val = train_test_split(df_ftrain, test_size=0.25, random_state=1)

df_train = df_train.reset_index(drop=True)
df_val = df_val.reset_index(drop=True)
df_test = df_test.reset_index(drop=True)

y_train = np.log1p(df_train.median_house_value.values)
y_val = np.log1p(df_val.median_house_value.values)
y_test = np.log1p(df_test.median_house_value.values)

del df_train['median_house_value']
del df_val['median_house_value']
del df_test['median_house_value']

feats = ["longitude", "latitude", "housing_median_age", "total_rooms", "total_bedrooms", "population", "households", 
        "median_income", "ocean_proximity"]

train_dicts = df_train[feats].to_dict(orient='records')
val_dicts = df_val[feats].to_dict(orient='records')
dv = DictVectorizer(sparse=False)

X_train = dv.fit_transform(train_dicts)
X_val = dv.transform(val_dicts)

# Q1
dt = DecisionTreeRegressor(max_depth=1)
dt.fit(X_train, y_train)
print('Q1. Features to split the data: ', export_text(dt, feature_names=dv.get_feature_names()))

# Q2
rf = RandomForestRegressor(n_estimators=10, random_state=1, n_jobs=-1)
rf.fit(X_train, y_train)
y_pred = rf.predict(X_val)
print('Q2. RMSE of this model on validation: ', np.sqrt(mean_squared_error(y_val, y_pred)))

# Q3
scores = []

for n in tqdm(range(10, 201, 10)):
    rf = RandomForestRegressor(n_estimators=n, random_state=1, n_jobs=-1)
    rf.fit(X_train, y_train)
    
    y_pred = rf.predict(X_val)
    score = np.sqrt(mean_squared_error(y_val, y_pred))
    
    scores.append((n, score))

df_scores = pd.DataFrame(scores, columns=['n_estimators', 'rmse'])
plt.plot(df_scores.n_estimators, df_scores.rmse.round(3))
print('Q3. Plateau for n estimators: ', scores)

# Q4
scores = []

for d in tqdm([10, 15, 20, 25]):
    rf = RandomForestRegressor(n_estimators=0,
                               max_depth=d,
                               random_state=1, n_jobs=-1,
                               warm_start=True)

    for n in tqdm(range(10, 201, 10)):
        rf.n_estimators = n
        rf.fit(X_train, y_train)

        y_pred = rf.predict(X_val)
        score = np.sqrt(mean_squared_error(y_val, y_pred))

        scores.append((d, n, score))

columns = ['max_depth', 'n_estimators', 'rmse']
df_scores = pd.DataFrame(scores, columns=columns)

for d in [10, 15, 20, 25]:
    df_subset = df_scores[df_scores.max_depth == d]
    plt.plot(df_subset.n_estimators, df_subset.rmse, label=d)
plt.legend()
print('Q4. Best max depth: ', scores)

# Q5
rf = RandomForestRegressor(n_estimators=10, max_depth=20, 
                           random_state=1, n_jobs=-1)
rf.fit(X_train, y_train)
print(rf.feature_importances_)

df_importances = pd.DataFrame()
df_importances['feature'] = dv.get_feature_names()
df_importances['importance'] = rf.feature_importances_
print(df_importances)
print('Q5. The most important feature: ', df_importances.sort_values(by='importance', ascending=False).head())

# Q6
features = dv.get_feature_names()
regex = re.compile(r"<", re.IGNORECASE)
features = [regex.sub("_", col) if any(x in str(col) for x in set(('[', ']', '<'))) else col for col in features]

dtrain = xgb.DMatrix(X_train, label=y_train, feature_names=features)
dval = xgb.DMatrix(X_val, label=y_val, feature_names=features)
watchlist = [(dtrain, 'train'), (dval, 'val')]

xgb_params = {
    'eta': 0.3, 
    'max_depth': 6,
    'min_child_weight': 1,

    'objective': 'reg:squarederror',
    'nthread': 8,

    'seed': 1,
    'verbosity': 1,
}

print('Q6. Eta = 0.3')
model = xgb.train(xgb_params, dtrain, num_boost_round=100,
                  verbose_eval=5, evals=watchlist)

xgb_params = {
    'eta': 0.1, 
    'max_depth': 6,
    'min_child_weight': 1,

    'objective': 'reg:squarederror',
    'nthread': 8,

    'seed': 1,
    'verbosity': 1,
}

print('Q6. Eta = 0.1')
model = xgb.train(xgb_params, dtrain, num_boost_round=100,
                  verbose_eval=5, evals=watchlist)

# Output:
                           0         1         2         3         4
longitude            -122.23   -122.22   -122.24   -122.25   -122.25
latitude               37.88     37.86     37.85     37.85     37.85
housing_median_age      41.0      21.0      52.0      52.0      52.0
total_rooms            880.0    7099.0    1467.0    1274.0    1627.0
total_bedrooms         129.0    1106.0     190.0     235.0     280.0
population             322.0    2401.0     496.0     558.0     565.0
households             126.0    1138.0     177.0     219.0     259.0
median_income         8.3252    8.3014    7.2574    5.6431    3.8462
median_house_value  452600.0  358500.0  352100.0  341300.0  342200.0
ocean_proximity     NEAR BAY  NEAR BAY  NEAR BAY  NEAR BAY  NEAR BAY 


Warning (from warnings module):
  File "C:\Users\Yosep\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\deprecation.py", line 87
    warnings.warn(msg, category=FutureWarning)
FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.
Q1. Features to split the data:  |--- ocean_proximity=INLAND <= 0.50
|   |--- value: [12.31]
|--- ocean_proximity=INLAND >  0.50
|   |--- value: [11.61]

Q2. RMSE of this model on validation:  0.2457383433183843

  0%|          | 0/20 [00:00<?, ?it/s]
  5%|â–Œ         | 1/20 [00:00<00:05,  3.33it/s]
 10%|â–ˆ         | 2/20 [00:00<00:09,  1.91it/s]
 15%|â–ˆâ–Œ        | 3/20 [00:02<00:17,  1.06s/it]
 20%|â–ˆâ–ˆ        | 4/20 [00:05<00:29,  1.82s/it]
 25%|â–ˆâ–ˆâ–Œ       | 5/20 [00:09<00:35,  2.38s/it]
 30%|â–ˆâ–ˆâ–ˆ       | 6/20 [00:12<00:39,  2.80s/it]
 35%|â–ˆâ–ˆâ–ˆâ–Œ      | 7/20 [00:16<00:42,  3.28s/it]
 40%|â–ˆâ–ˆâ–ˆâ–ˆ      | 8/20 [00:21<00:45,  3.75s/it]
 45%|â–ˆâ–ˆâ–ˆâ–ˆâ–Œ     | 9/20 [00:27<00:47,  4.28s/it]
 50%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆ     | 10/20 [00:33<00:49,  4.98s/it]
 55%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ    | 11/20 [00:40<00:49,  5.52s/it]
 60%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ    | 12/20 [00:47<00:47,  5.93s/it]
 65%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ   | 13/20 [00:54<00:45,  6.45s/it]
 70%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ   | 14/20 [01:04<00:43,  7.27s/it]
 75%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ  | 15/20 [01:13<00:39,  7.87s/it]
 80%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ  | 16/20 [01:23<00:34,  8.66s/it]
 85%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ | 17/20 [01:35<00:28,  9.57s/it]
 90%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ | 18/20 [01:48<00:21, 10.60s/it]
 95%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ| 19/20 [02:01<00:11, 11.24s/it]
100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [02:13<00:00, 11.53s/it]
100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [02:17<00:00,  6.86s/it]

Q3. Plateau for n estimators:  
[(10, 0.2457383433183843), (20, 0.23926159143162362), (30, 0.23571658024242997), (40, 0.2345829928852663), 
(50, 0.23310354554874652), (60, 0.2328429808263216), (70, 0.23238404627057696), (80, 0.2325270885881096), 
(90, 0.2322152441944244), (100, 0.23196833981101553), (110, 0.23151835138763838), (120, 0.23162059722289455), 
(130, 0.23170961618874023), (140, 0.23169246809784283), (150, 0.23169445775520767), (160, 0.23169721161526824), 
(170, 0.23162910205851625), (180, 0.2317902360719715), (190, 0.23176241418109447), (200, 0.23165006514034592)]

  0%|          | 0/4 [00:00<?, ?it/s]
  0%|          | 0/20 [00:00<?, ?it/s][A
  5%|â–Œ         | 1/20 [00:00<00:09,  2.06it/s][A
 10%|â–ˆ         | 2/20 [00:01<00:08,  2.07it/s][A
 15%|â–ˆâ–Œ        | 3/20 [00:01<00:08,  1.96it/s][A
 20%|â–ˆâ–ˆ        | 4/20 [00:02<00:08,  1.97it/s][A
 25%|â–ˆâ–ˆâ–Œ       | 5/20 [00:02<00:07,  1.99it/s][A
 30%|â–ˆâ–ˆâ–ˆ       | 6/20 [00:03<00:06,  2.01it/s][A
 35%|â–ˆâ–ˆâ–ˆâ–Œ      | 7/20 [00:03<00:06,  1.98it/s][A
 40%|â–ˆâ–ˆâ–ˆâ–ˆ      | 8/20 [00:04<00:06,  1.95it/s][A
 45%|â–ˆâ–ˆâ–ˆâ–ˆâ–Œ     | 9/20 [00:05<00:05,  1.95it/s][A
 50%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆ     | 10/20 [00:06<00:06,  1.50it/s][A
 55%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ    | 11/20 [00:06<00:06,  1.31it/s][A
 60%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ    | 12/20 [00:07<00:05,  1.36it/s][A
 65%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ   | 13/20 [00:08<00:05,  1.39it/s][A
 70%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ   | 14/20 [00:08<00:04,  1.40it/s][A
 75%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ  | 15/20 [00:09<00:03,  1.41it/s][A
 80%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ  | 16/20 [00:10<00:02,  1.41it/s][A
 85%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ | 17/20 [00:10<00:02,  1.42it/s][A
 90%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ | 18/20 [00:11<00:01,  1.40it/s][A
 95%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ| 19/20 [00:12<00:00,  1.49it/s][A
100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [00:12<00:00,  1.77it/s][A
100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [00:12<00:00,  1.61it/s]
 25%|â–ˆâ–ˆâ–Œ       | 1/4 [00:12<00:37, 12.53s/it]

  0%|          | 0/20 [00:00<?, ?it/s][A
  5%|â–Œ         | 1/20 [00:00<00:05,  3.70it/s][A
 10%|â–ˆ         | 2/20 [00:00<00:05,  3.11it/s][A
 15%|â–ˆâ–Œ        | 3/20 [00:01<00:05,  2.86it/s][A
 20%|â–ˆâ–ˆ        | 4/20 [00:01<00:06,  2.57it/s][A
 25%|â–ˆâ–ˆâ–Œ       | 5/20 [00:02<00:06,  2.48it/s][A
 30%|â–ˆâ–ˆâ–ˆ       | 6/20 [00:02<00:05,  2.34it/s][A
 35%|â–ˆâ–ˆâ–ˆâ–Œ      | 7/20 [00:02<00:05,  2.32it/s][A
 40%|â–ˆâ–ˆâ–ˆâ–ˆ      | 8/20 [00:03<00:05,  2.24it/s][A
 45%|â–ˆâ–ˆâ–ˆâ–ˆâ–Œ     | 9/20 [00:03<00:04,  2.33it/s][A
 50%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆ     | 10/20 [00:04<00:04,  2.29it/s][A
 55%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ    | 11/20 [00:04<00:03,  2.26it/s][A
 60%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ    | 12/20 [00:05<00:03,  2.24it/s][A
 65%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ   | 13/20 [00:05<00:03,  2.10it/s][A
 70%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ   | 14/20 [00:06<00:03,  1.84it/s][A
 75%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ  | 15/20 [00:07<00:02,  1.71it/s][A
 80%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ  | 16/20 [00:07<00:02,  1.60it/s][A
 85%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ | 17/20 [00:08<00:02,  1.45it/s][A
 90%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ | 18/20 [00:09<00:01,  1.34it/s][A
 95%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ| 19/20 [00:10<00:00,  1.25it/s][A
100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [00:11<00:00,  1.15it/s][A
100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [00:11<00:00,  1.68it/s]
 50%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆ     | 2/4 [00:24<00:24, 12.28s/it]

  0%|          | 0/20 [00:00<?, ?it/s][A
  5%|â–Œ         | 1/20 [00:00<00:11,  1.66it/s][A
 10%|â–ˆ         | 2/20 [00:01<00:12,  1.46it/s][A
 15%|â–ˆâ–Œ        | 3/20 [00:02<00:12,  1.38it/s][A
 20%|â–ˆâ–ˆ        | 4/20 [00:02<00:11,  1.37it/s][A
 25%|â–ˆâ–ˆâ–Œ       | 5/20 [00:03<00:11,  1.30it/s][A
 30%|â–ˆâ–ˆâ–ˆ       | 6/20 [00:04<00:10,  1.29it/s][A
 35%|â–ˆâ–ˆâ–ˆâ–Œ      | 7/20 [00:05<00:10,  1.26it/s][A
 40%|â–ˆâ–ˆâ–ˆâ–ˆ      | 8/20 [00:06<00:09,  1.29it/s][A
 45%|â–ˆâ–ˆâ–ˆâ–ˆâ–Œ     | 9/20 [00:06<00:08,  1.27it/s][A
 50%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆ     | 10/20 [00:07<00:08,  1.24it/s][A
 55%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ    | 11/20 [00:08<00:07,  1.27it/s][A
 60%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ    | 12/20 [00:09<00:06,  1.31it/s][A
 65%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ   | 13/20 [00:10<00:05,  1.27it/s][A
 70%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ   | 14/20 [00:10<00:04,  1.25it/s][A
 75%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ  | 15/20 [00:11<00:03,  1.26it/s][A
 80%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ  | 16/20 [00:12<00:03,  1.23it/s][A
 85%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ | 17/20 [00:13<00:02,  1.23it/s][A
 90%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ | 18/20 [00:14<00:01,  1.26it/s][A
 95%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ| 19/20 [00:14<00:00,  1.23it/s][A
100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [00:16<00:00,  1.07it/s][A
100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [00:16<00:00,  1.23it/s]
 75%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ  | 3/4 [00:40<00:14, 14.11s/it]

  0%|          | 0/20 [00:00<?, ?it/s][A
  5%|â–Œ         | 1/20 [00:01<00:18,  1.05it/s][A
 10%|â–ˆ         | 2/20 [00:02<00:18,  1.01s/it][A
 15%|â–ˆâ–Œ        | 3/20 [00:02<00:16,  1.04it/s][A
 20%|â–ˆâ–ˆ        | 4/20 [00:03<00:15,  1.06it/s][A
 25%|â–ˆâ–ˆâ–Œ       | 5/20 [00:04<00:14,  1.05it/s][A
 30%|â–ˆâ–ˆâ–ˆ       | 6/20 [00:05<00:13,  1.03it/s][A
 35%|â–ˆâ–ˆâ–ˆâ–Œ      | 7/20 [00:06<00:12,  1.04it/s][A
 40%|â–ˆâ–ˆâ–ˆâ–ˆ      | 8/20 [00:07<00:11,  1.06it/s][A
 45%|â–ˆâ–ˆâ–ˆâ–ˆâ–Œ     | 9/20 [00:08<00:10,  1.05it/s][A
 50%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆ     | 10/20 [00:09<00:09,  1.05it/s][A
 55%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ    | 11/20 [00:10<00:08,  1.03it/s][A
 60%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ    | 12/20 [00:11<00:07,  1.03it/s][A
 65%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ   | 13/20 [00:12<00:06,  1.01it/s][A
 70%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ   | 14/20 [00:13<00:05,  1.00it/s][A
 75%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ  | 15/20 [00:14<00:05,  1.03s/it][A
 80%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ  | 16/20 [00:15<00:04,  1.02s/it][A
 85%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ | 17/20 [00:16<00:03,  1.00s/it][A
 90%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ | 18/20 [00:17<00:02,  1.02s/it][A
 95%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ| 19/20 [00:18<00:01,  1.00s/it][A
100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [00:19<00:00,  1.05it/s][A
100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [00:19<00:00,  1.02it/s]
100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 4/4 [01:00<00:00, 16.34s/it]
100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 4/4 [01:00<00:00, 15.17s/it]

Q4. Best max depth:  
[(10, 10, 0.25504160871076226), (10, 20, 0.2527843628111254), (10, 30, 0.25164651106868285), (10, 40, 0.2510617356366555), 
(10, 50, 0.2501924996109377), (10, 60, 0.25009613605670555), (10, 70, 0.24991662218794555), (10, 80, 0.24959018682670703), 
(10, 90, 0.24931387548986408), (10, 100, 0.24915438732328005), (10, 110, 0.2489049445029139), (10, 120, 0.24896927877728176), 
(10, 130, 0.24909944899187067), (10, 140, 0.24920575579859983), (10, 150, 0.24919143624423531), (10, 160, 0.24911488721352454), 
(10, 170, 0.24890022800447836), (10, 180, 0.24900930356623047), (10, 190, 0.24908309742304938), (10, 200, 0.24910554094143503), 
(15, 10, 0.24479009739308977), (15, 20, 0.2393064768432696), (15, 30, 0.23690899332310017), (15, 40, 0.23598320832282838), 
(15, 50, 0.23472976205475554), (15, 60, 0.23465620779540475), (15, 70, 0.2341061444995546), (15, 80, 0.23396237196709047), (
15, 90, 0.23377586377559462), (15, 100, 0.23353976973246612), (15, 110, 0.23316836533579852), (15, 120, 0.23321709249918968), 
(15, 130, 0.2333099687153176), (15, 140, 0.23325447197960603), (15, 150, 0.23319835806483818), (15, 160, 0.23314363473022764), 
(15, 170, 0.23311174668233933), (15, 180, 0.23323672099245532), (15, 190, 0.23333706266123522), (15, 200, 0.23325999020061972), 
(20, 10, 0.24632724709475107), (20, 20, 0.23893704809865254), (20, 30, 0.23588594680469727), (20, 40, 0.23484447362154207), 
(20, 50, 0.23341107720563434), (20, 60, 0.2334268575203555), (20, 70, 0.23294851024600488), (20, 80, 0.23287600948835435), 
(20, 90, 0.2326772609881222), (20, 100, 0.23246905636843343), (20, 110, 0.23213858567512657), (20, 120, 0.23211819471311915), 
(20, 130, 0.23216046623873954), (20, 140, 0.23198294566550887), (20, 150, 0.23203153190290474), (20, 160, 0.23200216812285518), 
(20, 170, 0.2319387886624784), (20, 180, 0.23211760926183014), (20, 190, 0.23205432146957328), (20, 200, 0.23189282931100264), 
(25, 10, 0.24606899577838157), (25, 20, 0.2388035030550955), (25, 30, 0.23545383777019954), (25, 40, 0.23433791921746358), 
(25, 50, 0.2327472680347638), (25, 60, 0.23250551648969578), (25, 70, 0.23200663488149137), (25, 80, 0.23190540176939953), 
(25, 90, 0.23166914875558112), (25, 100, 0.23156311066272178), (25, 110, 0.2312554948289137), (25, 120, 0.231297064426222), 
(25, 130, 0.23153029933747013), (25, 140, 0.23145847052239765), (25, 150, 0.23151060181551608), (25, 160, 0.2314844245971542), 
(25, 170, 0.23144009817899883), (25, 180, 0.23159836750515786), (25, 190, 0.23160263478018564), (25, 200, 0.23149231798014022)]

[1.69573183e-02 3.30938997e-02 1.01333971e-01 9.62649876e-02 3.62912907e-01 3.00723750e-03 3.10900842e-01 
 3.56806263e-04 4.48661972e-04 4.22762446e-03 3.09180197e-02 1.90412562e-02 2.05364687e-02]
 
                       feature  importance
0                   households    0.016957
1           housing_median_age    0.033094
2                     latitude    0.101334
3                    longitude    0.096265
4                median_income    0.362913
5    ocean_proximity=<1H OCEAN    0.003007
6       ocean_proximity=INLAND    0.310901
7       ocean_proximity=ISLAND    0.000357
8     ocean_proximity=NEAR BAY    0.000449
9   ocean_proximity=NEAR OCEAN    0.004228
10                  population    0.030918
11              total_bedrooms    0.019041
12                 total_rooms    0.020536

Q5. The most important feature:                    
feature  importance
4           median_income    0.362913
6  ocean_proximity=INLAND    0.310901
2                latitude    0.101334
3               longitude    0.096265
1      housing_median_age    0.033094

Q6. Eta = 0.3
[0]	train-rmse:8.12733	val-rmse:8.13245
[5]	train-rmse:1.40218	val-rmse:1.40741
[10]	train-rmse:0.34481	val-rmse:0.35782
[15]	train-rmse:0.23555	val-rmse:0.26044
[20]	train-rmse:0.21580	val-rmse:0.24624
[25]	train-rmse:0.20395	val-rmse:0.24099
[30]	train-rmse:0.19440	val-rmse:0.23741
[35]	train-rmse:0.18637	val-rmse:0.23562
[40]	train-rmse:0.17983	val-rmse:0.23419
[45]	train-rmse:0.17468	val-rmse:0.23279
[50]	train-rmse:0.16934	val-rmse:0.23097
[55]	train-rmse:0.16546	val-rmse:0.23039
[60]	train-rmse:0.16177	val-rmse:0.22950
[65]	train-rmse:0.15762	val-rmse:0.22857
[70]	train-rmse:0.15323	val-rmse:0.22787
[75]	train-rmse:0.15010	val-rmse:0.22755
[80]	train-rmse:0.14564	val-rmse:0.22611
[85]	train-rmse:0.14166	val-rmse:0.22579
[90]	train-rmse:0.13892	val-rmse:0.22628
[95]	train-rmse:0.13553	val-rmse:0.22630
[99]	train-rmse:0.13299	val-rmse:0.22610

Q6. Eta = 0.1
[0]	train-rmse:10.44372	val-rmse:10.44938
[5]	train-rmse:6.17513	val-rmse:6.17987
[10]	train-rmse:3.65741	val-rmse:3.66135
[15]	train-rmse:2.17500	val-rmse:2.17928
[20]	train-rmse:1.30499	val-rmse:1.31054
[25]	train-rmse:0.79933	val-rmse:0.80657
[30]	train-rmse:0.51144	val-rmse:0.52189
[35]	train-rmse:0.35700	val-rmse:0.37264
[40]	train-rmse:0.27984	val-rmse:0.30053
[45]	train-rmse:0.24350	val-rmse:0.26829
[50]	train-rmse:0.22614	val-rmse:0.25334
[55]	train-rmse:0.21695	val-rmse:0.24657
[60]	train-rmse:0.21035	val-rmse:0.24189
[65]	train-rmse:0.20579	val-rmse:0.23943
[70]	train-rmse:0.20116	val-rmse:0.23684
[75]	train-rmse:0.19680	val-rmse:0.23507
[80]	train-rmse:0.19384	val-rmse:0.23398
[85]	train-rmse:0.19085	val-rmse:0.23275
[90]	train-rmse:0.18794	val-rmse:0.23206
[95]	train-rmse:0.18541	val-rmse:0.23106
[99]	train-rmse:0.18329	val-rmse:0.23054
